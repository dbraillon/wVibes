<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark"
		title="Configuration de la connexion avec le Bridge"
		creationComplete="view_creationCompleteHandler(event)">
	
	<fx:Script>
		<![CDATA[
			import com.dbraillon.pocspotifymobile.connections.BridgeConnection;
			
			import mx.events.FlexEvent;
			import mx.utils.OnDemandEventDispatcher;
			
			
			private var _bridgeConnection:BridgeConnection;
			
			protected function view_creationCompleteHandler(event:FlexEvent):void
			{
				// ajout des écouteurs sur les recherches de connexion
				addEventListener(BridgeConnection.NOTFOUND_LOCAL_SEARCH_EVENT, onNotFoundLocalSearch);
				addEventListener(BridgeConnection.FOUND_LOCAL_SEARCH_EVENT, onFoundLocalSearch);
				addEventListener(BridgeConnection.NOTFOUND_BASIC_SEARCH_EVENT, onNotFoundBasicSearch);
				addEventListener(BridgeConnection.FOUND_BASIC_SEARCH_EVENT, onFoundBasicSearch);
				addEventListener(BridgeConnection.NOTFOUND_CUSTOM_SEARCH_EVENT, onNotFoundCustomSearch);
				addEventListener(BridgeConnection.FOUND_CUSTOM_SEARCH_EVENT, onFoundCustomSearch);
				
				// récupération de l'instance de la connexion au bridge
				_bridgeConnection = BridgeConnection.getInstance();
				
				// ajout de cet event dispatcher
				_bridgeConnection.addEventDispatcher(this);
				
				// poursuite sur la recherche locale
				_bridgeConnection.searchLocalConfiguration();
			}
			
			// action demandée si la recherche de configuration locale a échoué
			protected function onNotFoundLocalSearch(event:Event):void
			{
				// abandon de la recherche locale
				removeEventListener(BridgeConnection.NOTFOUND_LOCAL_SEARCH_EVENT, onNotFoundLocalSearch);
				removeEventListener(BridgeConnection.FOUND_LOCAL_SEARCH_EVENT, onFoundLocalSearch);
				
				// poursuite sur la recherche basique
				_bridgeConnection.launchSearchBasicConfiguration();
			}
			
			// action demandée si la recherche de configuration locale a réussi
			protected function onFoundLocalSearch(event:Event):void
			{
				// abandon de toutes les recherches
				removeEventListener(BridgeConnection.NOTFOUND_LOCAL_SEARCH_EVENT, onNotFoundLocalSearch);
				removeEventListener(BridgeConnection.FOUND_LOCAL_SEARCH_EVENT, onFoundLocalSearch);
				removeEventListener(BridgeConnection.NOTFOUND_BASIC_SEARCH_EVENT, onNotFoundBasicSearch);
				removeEventListener(BridgeConnection.FOUND_BASIC_SEARCH_EVENT, onFoundBasicSearch);
				removeEventListener(BridgeConnection.NOTFOUND_CUSTOM_SEARCH_EVENT, onNotFoundCustomSearch);
				removeEventListener(BridgeConnection.FOUND_CUSTOM_SEARCH_EVENT, onFoundCustomSearch);
				
				// la connexion a été trouvé
				connexionFound();
			}
			
			// action demandée si la recherche de configuration basique a échoué
			protected function onNotFoundBasicSearch(event:Event):void
			{
				// abandon de la recherche basique
				removeEventListener(BridgeConnection.NOTFOUND_BASIC_SEARCH_EVENT, onNotFoundBasicSearch);
				removeEventListener(BridgeConnection.FOUND_BASIC_SEARCH_EVENT, onFoundBasicSearch);
				
				// poursuite sur la recherche personnalisé
				networkConfiguration.visible = true;
			}
			
			// action demandée si la recherche de configuration basique a réussi
			protected function onFoundBasicSearch(event:Event):void
			{
				// abandon de toutes les recherches
				removeEventListener(BridgeConnection.NOTFOUND_BASIC_SEARCH_EVENT, onNotFoundBasicSearch);
				removeEventListener(BridgeConnection.FOUND_BASIC_SEARCH_EVENT, onFoundBasicSearch);
				removeEventListener(BridgeConnection.NOTFOUND_CUSTOM_SEARCH_EVENT, onNotFoundCustomSearch);
				removeEventListener(BridgeConnection.FOUND_CUSTOM_SEARCH_EVENT, onFoundCustomSearch);
				
				// la connexion a été trouvé
				connexionFound();
			}
			
			// action demandée si la recherche de configuration personnalisée a échoué
			protected function onNotFoundCustomSearch(event:Event):void
			{
				// activation du bouton de connexion
				connectButton.enabled = true;
				
				// remise à zéro du champ d'adresse IP
				networkAddress.text = "";
			}
			
			// action demandée si la recherche de configuration personnalisée a réussi
			protected function onFoundCustomSearch(event:Event):void
			{
				// abandon de toutes les recherches
				removeEventListener(BridgeConnection.NOTFOUND_CUSTOM_SEARCH_EVENT, onNotFoundCustomSearch);
				removeEventListener(BridgeConnection.FOUND_CUSTOM_SEARCH_EVENT, onFoundCustomSearch);
				
				// la connexion a été trouvé
				connexionFound();
			}
			
			// action demandée si le bouton de recherche de configuration personnalisée a été appuyé
			protected function connect_clickHandler(event:MouseEvent):void
			{
				// désactivation du bouton de connexion
				connectButton.enabled = false;
				
				// poursuite de la recherche personnalisée
				_bridgeConnection.searchCustomConfiguration(networkAddress.text);
			}
			
			// action demandée si la connexion a réussi
			private function connexionFound():void
			{
				// try connexion
				trace("[BridgeConnection]: La connexion est établie !");
				navigator.pushView(HomeScreen);
			}
		]]>
	</fx:Script>
	
	<s:VGroup id="networkConfiguration"
			  height="100%" width="100%"
			  paddingTop="10" paddingBottom="10" paddingLeft="10" paddingRight="10"
			  visible="false">
		
		<s:HGroup height="50" width="100%">
			
			<s:Label height="100%" width="50%"
					 verticalAlign="middle"
					 text="Adresse IP de votre bridge"/>
			<s:TextInput height="100%" width="50%"
						 id="networkAddress" prompt="example : 192.168.0.17"/>
			
		</s:HGroup>
		
		<s:Button id="connectButton"
				  label="Connecter"
				  click="connect_clickHandler(event)"/>
		
	</s:VGroup>
	
</s:View>
