<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:mx="library://ns.adobe.com/flex/mx"
		skinClass="com.wvibes.wremote.views.skins.ViewSkin" 
		actionBarVisible="false" tabBarVisible="false"
		preinitialize="view_preinitializeHandler(event)"
		creationComplete="view_creationCompleteHandler(event)">
	
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		
		@font-face {
			src:url("assets/fonts/OpenSans-Light.ttf");
			fontFamily: openLight;
			advancedAntiAliasing: true;
		}
	</fx:Style>
	
	<fx:Declarations>
		<fx:int 	id="panelError_Y">0</fx:int>
		<fx:Boolean id="panelError_IsHide">true</fx:Boolean>
		<s:Move 	id="panelError_Open"   target="{panelError}" yTo="{-panelError_Y + 35}" duration="250"/>
		<s:Move 	id="panelError_Close"  target="{panelError}" yTo="{-panelError_Y}" duration="250"/>
		<s:Move 	id="panelError_Detail" target="{panelError}" yTo="{-panelError_Y + 100}" duration="250"/>
		
		<fx:int 	id="panelConfig_Y">0</fx:int>
		<fx:Boolean id="panelConfig_IsHide">true</fx:Boolean>
		<s:Move 	id="panelConfig_Open"  target="{panelConfig}" yTo="{panelConfig_Y - contentPanelConfig.height}" duration="250"/>
		<s:Move 	id="panelConfig_Close" target="{panelConfig}" yTo="{panelConfig_Y}" duration="250"/>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import com.wvibes.wremote.connections.ServerConnection;
			
			import mx.events.FlexEvent;
			
			
			private var serverConnection:ServerConnection;
			
			protected function view_preinitializeHandler(event:FlexEvent):void
			{
				trace("-loginViewPreinitialize : RETRIEVE SERVER CONNECTION INSTANCE");
				
				serverConnection = ServerConnection.getInstance();
			}
			
			protected function view_creationCompleteHandler(event:FlexEvent):void
			{
				trace("-loginViewCreationComplete : CALCULATION OF VIEW HEIGHT");
				
				panelConfig_Y = content.height - iconPanelConfig.height;
			}
			
			protected function sendInformationButton_clickHandler(event:MouseEvent):void
			{
				trace("-loginViewSendInformation : SENDING SIGNIN REQUEST...");
				
				var login:String = loginInput.text;
				var password:String = passwordInput.text;
				var address:String = addressInput.text;
				
				serverConnection.changeAddress(address);
				serverConnection.addEventListener(ServerConnection.REQUEST_SUCCED, serverConnection_requestSuccess);
				serverConnection.addEventListener(ServerConnection.REQUEST_FAILED, serverConnection_requestFail);
				serverConnection.signinRequest(login, password);
				
				trace("-loginViewSendInformation : WAITING FOR RESPONSE...");
				
				errorLabel_change(false, "");
				sendInformationButton.enabled = false;
			}
			
			protected function serverConnection_requestSuccess(event:Event):void
			{
				trace("-loginViewRequestSucced : PARSING REQUEST RESPONSE");
				
				serverConnection.removeEventListener(ServerConnection.REQUEST_SUCCED, serverConnection_requestSuccess);
				serverConnection.removeEventListener(ServerConnection.REQUEST_FAILED, serverConnection_requestFail);
				
				sendInformationButton.enabled = true;
				
				if(serverConnection.data.response == "LOGIN: OK")
				{
					trace("-loginViewRequestSucced : SIGNIN SUCCESS");
					
					navigator.pushView(PlayView);
				}
				else
				{
					trace("-loginViewRequestSucced : SIGNIN FAIL");
					
					serverConnection.data.error = serverConnection.data.response;
					serverConnection_requestFail(null);
				}
			}
			
			protected function serverConnection_requestFail(event:Event):void
			{
				trace("-loginViewSigninFailed : REQUEST FAILED");
				
				serverConnection.removeEventListener(ServerConnection.REQUEST_SUCCED, serverConnection_requestSuccess);
				serverConnection.removeEventListener(ServerConnection.REQUEST_FAILED, serverConnection_requestFail);
				
				errorLabel_change(true, serverConnection.data.error);
				sendInformationButton.enabled = true;
			}
			
			private function errorLabel_change(displayed:Boolean, text:String):void
			{
				trace("-loginViewErrorLabel : DISPLAYED " + displayed + " TEXT " + text);
				
				if(displayed)
				{
					errorLabel.text = text;
					panelError_Open.play();
				}
				else
				{
					panelError_Close.play();
				}
			}
			
			protected function panelError_clickHandler(event:MouseEvent):void
			{
				if(panelError_IsHide)
				{
					panelError_Detail.play();
					panelError_IsHide = false;
				}
				else
				{
					panelError_Open.play();
					panelError_IsHide = true;
				}
			}
			
			protected function panelConfig_clickHandler(event:MouseEvent):void
			{
				if(panelConfig_IsHide)
				{
					panelConfig_Open.play();
					panelConfig_IsHide = false;
				}
				else
				{
					panelConfig_Close.play();
					panelConfig_IsHide = true;
				}
			}
			
		]]>
	</fx:Script>
	
	<!-- header -->
	<s:Group id="panelError" width="100%" height="50%" y="{-panelError_Y}" depth="2"
			 click="panelError_clickHandler(event)"
			 currentStateChange="panelError_Y=panelError.height"
			 addedToStage="panelError_Y=panelError.height">
		
		<s:VGroup height="100%" width="100%" horizontalAlign="center" gap="0">
			
			<s:Rect width="100%" height="100%">
				<s:fill>
					<s:SolidColor color="0xE60005"/>
				</s:fill>
			</s:Rect>
			
			<s:Group width="{errorLabel.width + 40}" height="30">
				<s:Rect height="100%" width="100%" bottomLeftRadiusX="5" bottomRightRadiusX="5">
					<s:fill>
						<s:SolidColor color="0xE60005"/>
					</s:fill>
				</s:Rect>
				<s:HGroup width="100%" height="100%" horizontalAlign="center" verticalAlign="middle">
					<s:Image width="12" height="12" smooth="true" smoothingQuality="high"
							 source="assets/background/ic-cross-white-x2.png"/>
					<s:Label id="errorLabel"
							 fontFamily="openLight" color="0xFFFFFF" fontSize="12"/>
				</s:HGroup>
				
			</s:Group>
			
		</s:VGroup>
		
	</s:Group>
	
	<s:VGroup id="content" height="100%" width="100%" depth="1">

		<s:VGroup height="70%" width="100%" horizontalAlign="center" gap="0">
			
			<s:Spacer height="6%"/>
			
			<s:Image width="75%" height="40%" smooth="true" smoothingQuality="high"
					 source="assets/background/logo-white.png"/>
			
			<s:Spacer height="10%"/>
			
			<s:TextInput id="loginInput" prompt="Email ou Identifiant..." width="75%" height="40"
						 skinClass="com.wvibes.wremote.views.skins.LoginTextInputTopSkin" color="0x505050"/>
			
			<s:TextInput id="passwordInput" prompt="Mot de passe..." width="75%" height="40"
						 skinClass="com.wvibes.wremote.views.skins.LoginTextInputBottomSkin" fontWeight="bold" color="0x505050"
						 displayAsPassword="true"/>
			
			<s:Spacer height="10%"/>
			
			<s:Button id="sendInformationButton" label="Connexion" color="0xFCFCFC" width="75%"
					  skinClass="com.wvibes.wremote.views.skins.LoginButtonSkin" height="40"
					  click="sendInformationButton_clickHandler(event)"/>
			
		</s:VGroup>
		
		<!--- footer, work fine ! -->
		<s:VGroup width="100%" height="30%" bottom="0" horizontalAlign="right" verticalAlign="bottom">
			
			<s:Image width="50%" height="100%" right="0" horizontalAlign="right" verticalAlign="bottom"
					 smooth="true" smoothingQuality="high" source="assets/background/footer-login-vW.png"/>
			
		</s:VGroup>
	</s:VGroup>
	
	<!-- config panel -->
	<s:VGroup id="panelConfig" width="100%" y="{panelConfig_Y}" depth="2" gap="0"
			  click="panelConfig_clickHandler(event)">
		
		<s:VGroup paddingLeft="50">
			<s:Group id="iconPanelConfig" width="{configImage.width + 28}" height="40">
				
				<s:Rect height="100%" width="100%" topLeftRadiusX="5" topRightRadiusX="5">
					<s:fill>
						<s:SolidColor color="0x1D1D1D"/>
					</s:fill>
				</s:Rect>
				
				<s:HGroup width="100%" height="100%" horizontalAlign="center" verticalAlign="middle">
					<s:Image id="configImage" width="12" height="12" smooth="true" smoothingQuality="high"
							 source="assets/background/ic-cross-white-x2.png"/>
				</s:HGroup>
				
			</s:Group>
		</s:VGroup>
		
		<s:VGroup id="contentPanelConfig" width="100%" height="50">
			<s:Group width="100%" height="100%">
				
				<s:Rect width="100%" height="100%">
					<s:fill>
						<s:SolidColor color="0x1D1D1D"/>
					</s:fill>
				</s:Rect>
				
				<s:HGroup width="100%" height="100%" left="10" right="10" top="10" bottom="10">
					<s:TextInput id="addressInput" prompt="Adresse IP du bridge..." text="10.18.18.153"
								 width="70%" height="100%" fontSize="12"/>
					<s:Button label="Try" width="30%" height="100%" color="0xFCFCFC" fontSize="12"
							  skinClass="com.wvibes.wremote.views.skins.LoginButtonSkin"
							  click="sendInformationButton_clickHandler(event)"/>
				</s:HGroup>
				
			</s:Group>
		</s:VGroup>
		
	</s:VGroup>
	
</s:View>
