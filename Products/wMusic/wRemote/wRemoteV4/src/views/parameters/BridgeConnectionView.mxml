<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:mx="library://ns.adobe.com/flex/mx"
		xmlns:s="library://ns.adobe.com/flex/spark"
		creationComplete="view_creationCompleteHandler(event)"
		removing="view_removingHandler(event)">
	
	<fx:Metadata>
		[ResourceBundle("LocalizedStrings")]
	</fx:Metadata>
	
	<s:titleContent>
		<s:Label text="{loadLabel}" 
				 color="white" fontWeight="bold" />
	</s:titleContent>
	
	<s:VGroup height="100%" width="100%" 
			  horizontalAlign="center" verticalAlign="middle">
		
		<s:Label width="90%" 
				 text="{resourceManager.getString('LocalizedStrings', 'BCV_LABEL_EXPLANATION')}" />
		
		<s:Spacer height="20" />
		
		<s:TextInput id="addressInput" 
					 width="60%" height="35"
					 prompt="{resourceManager.getString('LocalizedStrings', 'BCV_TEXTINPUT_ADDRESS')}" />
		
		<s:Spacer height="40" />
		
		<s:Button width="50%" height="35" 
				  label="{resourceManager.getString('LocalizedStrings', 'BCV_BUTTON_CONNECT')}"
				  includeInLayout="{!loadVisible}" visible="{!loadVisible}"
				  click="discover_startRequest()" />
		<s:BusyIndicator symbolColor="0x000000" 
						 includeInLayout="{loadVisible}" visible="{loadVisible}" />
		
	</s:VGroup>
	
	
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import spark.events.ViewNavigatorEvent;
			
			import connections.Address;
			import connections.ConnectionEvent;
			
			
			private var model:Model;
			
			[Bindable]
			private var loadVisible:Boolean;
			[Bindable]
			private var loadLabel:String;
			
			protected function view_creationCompleteHandler(event:FlexEvent):void
			{
				model = Model.getInstance();
				
				model.connection.addEventListener(ConnectionEvent.DISCOVER_SUCCED, discover_succedHandler);
				model.connection.addEventListener(ConnectionEvent.DISCOVER_FAILED, discover_failedHandler);
				
				
				// if data came with view calls, display it
				if(data) 
					loadLabel = data as String;
				
				// if wRemote already knows an address, imediatly try to reach it
				var address:Address = model.connection.address;
				if(address.url && address.port)
					addressInput.text = address.url;
			}
			
			protected function view_removingHandler(event:ViewNavigatorEvent):void
			{
				model.connection.removeEventListener(ConnectionEvent.DISCOVER_SUCCED, discover_succedHandler);
				model.connection.removeEventListener(ConnectionEvent.DISCOVER_FAILED, discover_failedHandler);
			}
			
			
			protected function discover_startRequest():void
			{
				loadVisible = true;
				loadLabel = resourceManager.getString('LocalizedStrings', 'BCV_LABEL_SEARCHING') + addressInput.text;
				
				model.connection.discover(new Address(addressInput.text, 1338));
			}
			
			protected function discover_succedHandler(event:ConnectionEvent):void
			{
				loadVisible = false;
				loadLabel = resourceManager.getString('LocalizedStrings', 'BCV_LABEL_SUCCESS');
				
				navigator.popView();
			}
			
			protected function discover_failedHandler(event:ConnectionEvent):void
			{
				loadVisible = false;
				loadLabel = resourceManager.getString('LocalizedStrings', 'BCV_LABEL_ERROR');
			}
			
		]]>
	</fx:Script>
	
</s:View>