<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:mx="library://ns.adobe.com/flex/mx"
		xmlns:s="library://ns.adobe.com/flex/spark"
		backgroundAlpha="0"
		creationComplete="view_creationCompleteHandler(event)"
		removing="view_removingHandler(event)">
	
	<fx:Metadata>
		[ResourceBundle("LocalizedStrings")]
	</fx:Metadata>
	
	<s:titleContent>
		<s:Label text="{loadLabel}" 
				 color="white" fontWeight="bold" />
	</s:titleContent>
	
	<s:VGroup height="100%" width="100%"
			  horizontalAlign="center" verticalAlign="middle">
			
		<s:Label width="90%"
				 text="{resourceManager.getString('LocalizedStrings', 'SCV_LABEL_EXPLANATION')}" />
		
		<s:Spacer height="20" />
		
		<s:VGroup width="80%" horizontalAlign="left">
			
			<s:Label text="Spotify" />
			<s:HGroup verticalAlign="middle" width="100%">
				
				<s:VGroup width="100%">
					
					<s:TextInput id="spotifyUsernameInput" width="100%" height="35"
								 prompt="{resourceManager.getString('LocalizedStrings', 'SCV_TEXTINPUT_LOGIN')}" />
					
					<s:TextInput id="spotifyPasswordInput" width="100%" height="35"
								 prompt="{resourceManager.getString('LocalizedStrings', 'SCV_TEXTINPUT_PASSWORD')}" displayAsPassword="true"/>
					
				</s:VGroup>
				
			</s:HGroup>
			
		</s:VGroup>
			
		<s:Spacer height="40" />
		
		<s:Button width="50%" height="35" label="{resourceManager.getString('LocalizedStrings', 'SCV_BUTTON_CONNECT')}"
				  includeInLayout="{!loadVisible}" visible="{!loadVisible}"
				  click="spotify_connectRequest()" />
		<s:BusyIndicator symbolColor="0x000000" 
						 includeInLayout="{loadVisible}" visible="{loadVisible}" />
		
	</s:VGroup>
		
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import spark.events.ViewNavigatorEvent;
			
			import connections.ServiceEvent;
			
			
			private var model:Model;
			
			[Bindable]
			private var loadVisible:Boolean;
			[Bindable]
			private var loadLabel:String;
			
			protected function view_creationCompleteHandler(event:FlexEvent):void
			{
				model = Model.getInstance();
				model.connection.service.addEventListener(ServiceEvent.SPOTIFY_CONNECTED, spotify_connectedHandler);
				model.connection.service.addEventListener(ServiceEvent.FAILED, request_failedHandler);
				
				
				// if wRemote already knows login and password, imediatly try to connect with it
				var spotify:Object = model.connection.service.spotifyCredential;
				if(spotify.login && spotify.password)
				{
					spotifyUsernameInput.text = spotify.login;
					spotifyPasswordInput.text = spotify.password;
				}
			}
			
			protected function view_removingHandler(event:ViewNavigatorEvent):void
			{
				model.connection.removeEventListener(ServiceEvent.SPOTIFY_CONNECTED, spotify_connectedHandler);
				model.connection.removeEventListener(ServiceEvent.FAILED, request_failedHandler);
			}
			
			
			protected function spotify_connectRequest():void
			{
				loadVisible = true;
				loadLabel = resourceManager.getString('LocalizedStrings', 'SCV_LABEL_SPOTIFY_CONNECTING');
				
				model.connection.service.registerSpotify(spotifyUsernameInput.text, spotifyPasswordInput.text);
			}
			
			protected function spotify_connectedHandler(event:ServiceEvent):void
			{
				loadVisible = false;
				loadLabel = resourceManager.getString('LocalizedStrings', 'SCV_LABEL_SPOTIFY_CONNECTED');
				
				navigator.popView();
			}
			
			protected function request_failedHandler(event:ServiceEvent):void
			{
				loadVisible = false;
				loadLabel = resourceManager.getString('LocalizedStrings', 'SCV_LABEL_SPOTIFY_ERROR');
			}
			
		]]>
	</fx:Script>
	
</s:View>
