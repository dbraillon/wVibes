<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark"
		skinClass="com.wvibes.wremote.views.skins.ViewSkin"
		preinitialize="view_preinitializeHandler(event)"
		viewActivate="view_activateHandler(event)">
	
	<fx:Script>
		<![CDATA[
			import com.wvibes.wremote.connections.ServerConnection;
			
			import mx.events.FlexEvent;
			
			private var serverConnection:ServerConnection;
			
			protected function view_preinitializeHandler(event:FlexEvent):void
			{
				serverConnection = ServerConnection.getInstance();
			}
			
			protected function view_activateHandler(event:Event):void
			{
				/*serverConnection.addEventListener(ServerConnection.PLAYING_MUSIC_REQUEST_SUCCED, serverConnection_playingMusicRequestSucced);
				serverConnection.addEventListener(ServerConnection.PLAYING_MUSIC_REQUEST_FAILED, serverConnection_playingMusicRequestFailed);
				serverConnection.playingMusicRequest();*/
			}
			
			protected function serverConnection_playingMusicRequestSucced(event:Event):void
			{
				//serverConnection.removeEventListener(ServerConnection.PLAYING_MUSIC_REQUEST_SUCCED, serverConnection_playingMusicRequestSucced);
				//serverConnection.removeEventListener(ServerConnection.PLAYING_MUSIC_REQUEST_SUCCED, serverConnection_playingMusicRequestFailed);
				
				var data:Object = event.target.data;
				sourceString = data.source;
				titleString = data.title;
				artistString = data.artist;
				currentInt = data.current;
				endInt = data.end;
				isPlayingBoolean = data.isPlaying;
				
				slider.value = currentInt;
			}
			
			protected function serverConnection_playingMusicRequestFailed(event:Event):void
			{
				//serverConnection.removeEventListener(ServerConnection.PLAYING_MUSIC_REQUEST_SUCCED, serverConnection_playingMusicRequestSucced);
				//serverConnection.removeEventListener(ServerConnection.PLAYING_MUSIC_REQUEST_SUCCED, serverConnection_playingMusicRequestFailed);
			}
			
			protected function playButton_clickHandler(event:MouseEvent):void
			{
				isPlayingBoolean = true;
			}
			
			protected function pauseButton_clickHandler(event:MouseEvent):void
			{
				isPlayingBoolean = false;
			}
			
			protected function quitButton_clickHandler(event:MouseEvent):void
			{
				var exitingEvent:Event = new Event(Event.EXITING, false, true);
				NativeApplication.nativeApplication.dispatchEvent(exitingEvent);
				
				if (!exitingEvent.isDefaultPrevented()) {
					NativeApplication.nativeApplication.exit();
				}
			}
			
			protected function slider_changeHandler(event:Event):void
			{
				var i:int = slider.value / 60;
				
				currentInt = slider.value;
			}
			
			protected function panelButton_clickHandler(event:MouseEvent):void
			{
				if(isHide)
				{
					panelOut.play();
					contentOut.play();
					isHide = false;
				}
				else
				{
					panelIn.play();
					contentIn.play();
					isHide = true;
				}
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		
		<fx:String id="sourceString">http://cdn-images.deezer.com/images/cover/44df4f6fb2534768f4924365c103d0f7/315x315-000000-80-0-0.jpg</fx:String>
		<fx:String id="titleString">Don't Stay</fx:String>
		<fx:String id="artistString">Linkin Park</fx:String>
		
		<fx:int id="currentInt">0</fx:int>
		<fx:int id="endInt">185</fx:int>
		
		<fx:Boolean id="isPlayingBoolean">false</fx:Boolean>
		<fx:Boolean id="isHide">true</fx:Boolean>
		
		<fx:String id="playlistString">LP en vrac</fx:String>
		
		<s:Move id="panelOut" target="{panel}" xTo="0" duration="250"/>
		<s:Move id="contentOut" target="{content}" xTo="100" duration="250"/>
		<s:Move id="panelIn" target="{panel}" xTo="-100" duration="250"/>
		<s:Move id="contentIn" target="{content}" xTo="0" duration="250"/>
		
	</fx:Declarations>
	
	<s:navigationContent>
		<s:Button id="panelButton" icon="assets/32x32/queue.png" click="panelButton_clickHandler(event)"/>
	</s:navigationContent>
	
	<s:titleContent>
		<s:VGroup height="100%" width="100%" gap="2">
			<s:Label height="100%" text="EN LECTURE" verticalAlign="top" fontSize="8"/>
			<s:Label height="100%" text="{playlistString}" verticalAlign="bottom" fontSize="14" fontWeight="bold"/>
		</s:VGroup>
	</s:titleContent>
	
	<s:actionContent>
		<s:Button id="quitButton" icon="assets/32x32/quit.png" click="quitButton_clickHandler(event)"/>
	</s:actionContent>
	
	<s:VGroup id="content" width="100%" height="100%" horizontalAlign="center" top="5">
		
		<s:Image height="60%" smooth="true" smoothingQuality="high" source="{sourceString}"/>
		
		<s:Label id="titleLabel" text="{titleString}" fontWeight="bold"/>
		<s:Label id="artistLabel" text="{artistString}"/>
		
		<s:HGroup width="100%" verticalAlign="middle" horizontalAlign="center"
				  paddingLeft="5" paddingRight="5">
			
			<s:Label id="currentTime" text="{currentInt}" width="10%"/>
			
			<s:HSlider id="slider" width="80%" minimum="0" maximum="{endInt}" stepSize="1"
					   liveDragging="true" change="slider_changeHandler(event)"/>
			
			<s:Label id="endTime" text="{endInt}" width="10%"/>
			
		</s:HGroup>
		
		<s:HGroup width="100%" verticalAlign="middle" horizontalAlign="center">
			
			<s:Button id="repeatButton" width="40" height="40" icon="assets/32x32/repeat.png"
					  skinClass="com.wvibes.wremote.views.skins.LoginButtonSkin"/>
			
			<s:Button id="previousButton" width="40" height="40" icon="assets/32x32/previous.png"
					  skinClass="com.wvibes.wremote.views.skins.LoginButtonSkin"/>
			
			<s:Button id="playButton" visible="{!isPlayingBoolean}" width="40" height="40" icon="assets/32x32/play.png"
					  click="playButton_clickHandler(event)" includeInLayout="{!isPlayingBoolean}"
					  skinClass="com.wvibes.wremote.views.skins.LoginButtonSkin"/>
			
			<s:Button id="pauseButton" visible="{isPlayingBoolean}" width="40" height="40" icon="assets/32x32/pause.png"
					  click="pauseButton_clickHandler(event)" includeInLayout="{isPlayingBoolean}"
					  skinClass="com.wvibes.wremote.views.skins.LoginButtonSkin"/>
			
			<s:Button id="nextButton" width="40" height="40" icon="assets/32x32/next.png"
					  skinClass="com.wvibes.wremote.views.skins.LoginButtonSkin"/>
			
			<s:Button id="shuffleButton" width="40" height="40" icon="assets/32x32/shuffle.png"
					  skinClass="com.wvibes.wremote.views.skins.LoginButtonSkin"/>
			
		</s:HGroup>
		
	</s:VGroup>
	
	<s:Group id="panel" width="100" height="100%" x="-100">
		<s:Rect width="100" height="100%">
			<s:fill>
				<s:SolidColor color="0xDADADA"/>
			</s:fill>
		</s:Rect>
		<s:VGroup height="100%" width="100%" gap="0">
			<s:Button label="TEST BUTTON" width="100%" skinClass="com.wvibes.wremote.views.skins.LoginButtonSkin" fontSize="10" left="10" right="10"/>
			<s:Button label="TEST BUTTON2" width="100%" skinClass="com.wvibes.wremote.views.skins.LoginButtonSkin" fontSize="10" left="10" right="10"/>
		</s:VGroup>
	</s:Group>
	
</s:View>
