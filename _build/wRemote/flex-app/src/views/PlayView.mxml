<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" title="Play"
		preinitialize="view_preinitializeHandler(event)"
		viewActivate="view_activateHandler(event)"
		backgroundColor="0x151515">
	
	<fx:Script>
		<![CDATA[
			import connections.ServerConnection;
			
			import mx.events.FlexEvent;
			
			private var serverConnection:ServerConnection;
			
			protected function view_preinitializeHandler(event:FlexEvent):void
			{
				serverConnection = ServerConnection.getInstance();
			}
			
			protected function view_activateHandler(event:Event):void
			{
				serverConnection.addEventListener(ServerConnection.PLAYING_MUSIC_REQUEST_SUCCED, serverConnection_playingMusicRequestSucced);
				serverConnection.addEventListener(ServerConnection.PLAYING_MUSIC_REQUEST_FAILED, serverConnection_playingMusicRequestFailed);
				serverConnection.playingMusicRequest();
			}
			
			protected function serverConnection_playingMusicRequestSucced(event:Event):void
			{
				serverConnection.removeEventListener(ServerConnection.PLAYING_MUSIC_REQUEST_SUCCED, serverConnection_playingMusicRequestSucced);
				serverConnection.removeEventListener(ServerConnection.PLAYING_MUSIC_REQUEST_SUCCED, serverConnection_playingMusicRequestFailed);
				
				var data:Object = event.target.data;
				sourceString = data.source;
				titleString = data.title;
				artistString = data.artist;
				currentInt = data.current;
				endInt = data.end;
				isPlayingBoolean = data.isPlaying;
				
				slider.value = currentInt;
			}
			
			protected function serverConnection_playingMusicRequestFailed(event:Event):void
			{
				serverConnection.removeEventListener(ServerConnection.PLAYING_MUSIC_REQUEST_SUCCED, serverConnection_playingMusicRequestSucced);
				serverConnection.removeEventListener(ServerConnection.PLAYING_MUSIC_REQUEST_SUCCED, serverConnection_playingMusicRequestFailed);
			}
			
			protected function playButton_clickHandler(event:MouseEvent):void
			{
				isPlayingBoolean = true;
			}
			
			protected function pauseButton_clickHandler(event:MouseEvent):void
			{
				isPlayingBoolean = false;
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		
		<fx:String id="sourceString">http://cdn-images.deezer.com/images/cover/44df4f6fb2534768f4924365c103d0f7/315x315-000000-80-0-0.jpg</fx:String>
		<fx:String id="titleString">Don't Stay</fx:String>
		<fx:String id="artistString">Linkin Park</fx:String>
		
		<fx:int id="currentInt">0</fx:int>
		<fx:int id="endInt">185</fx:int>
		
		<fx:Boolean id="isPlayingBoolean">false</fx:Boolean>
		
		<fx:String id="playlistString">LP en vrac</fx:String>
		
	</fx:Declarations>
	
	<s:navigationContent>
		<s:Button icon="assets/32x32/quit.png"/>
	</s:navigationContent>
	
	<s:titleContent>
		<s:VGroup height="100%" width="100%" gap="2">
			<s:Label height="100%" text="EN LECTURE" verticalAlign="top" fontSize="8"/>
			<s:Label height="100%" text="{playlistString}" verticalAlign="bottom" fontSize="14" fontWeight="bold"/>
		</s:VGroup>
	</s:titleContent>
	
	<s:actionContent>
		<s:Button icon="assets/32x32/queue.png"/>
	</s:actionContent>
	
	<s:VGroup width="100%" height="100%" horizontalAlign="center">
		
		<s:Image height="60%" source="{sourceString}"/>
		
		<s:Label id="titleLabel" text="{titleString}" fontWeight="bold"/>
		<s:Label id="artistLabel" text="{artistString}"/>
		
		<s:HGroup width="100%" verticalAlign="middle" horizontalAlign="center">
			
			<s:Label id="currentTime" text="{currentInt}" width="10%"/>
			
			<s:HSlider id="slider" width="80%" minimum="0" maximum="{endInt}" stepSize="1"
					   liveDragging="true" change="currentInt=slider.value"/>
			
			<s:Label id="endTime" text="{endInt}" width="10%"/>
			
		</s:HGroup>
		
		<s:HGroup width="100%" verticalAlign="middle" horizontalAlign="center">
			
			<s:Button id="repeatButton" label="R"/>
			
			<s:Button id="previousButton" label="Pr"/>
			
			<s:Button id="playButton" label="Pl" click="playButton_clickHandler(event)"
					  visible="{!isPlayingBoolean}" includeInLayout="{!isPlayingBoolean}"/>
			
			<s:Button id="pauseButton" label="Pa" click="pauseButton_clickHandler(event)"
					  visible="{isPlayingBoolean}" includeInLayout="{isPlayingBoolean}"/>
			
			<s:Button id="nextButton" label="N"/>
			
			<s:Button id="shuffleButton" label="S"/>
			
		</s:HGroup>
		
	</s:VGroup>
	
</s:View>
